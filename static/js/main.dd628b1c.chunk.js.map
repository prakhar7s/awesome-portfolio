{"version":3,"sources":["components/custom-button/custom-button.jsx","components/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["CustomButton","label","color","className","style","background","Main","useState","isDarkMode","setDarkMode","addToast","useToasts","taostMsg","msg","appearance","autoDismiss","autoDismissTimeout","data-aos","href","target","onClick","App","useEffect","Aos","init","offset","duration","easing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUAWeA,EATM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC7B,OACE,yBAAQC,UAAU,gBAAgBC,MAAO,CAAEF,SAA3C,UACGD,EACD,sBAAME,UAAU,OAAOC,MAAO,CAAEC,WAAYH,S,kCCoEnCI,EAhEF,WACX,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACQC,EAAaC,sBAAbD,SAEFE,EAAW,SAACC,GAChBH,EAASG,EAAK,CACZC,WAAY,UACZC,aAAa,EACbC,mBAAoB,OAIxB,OACE,sBAAKb,UAAS,cAASK,EAAa,aAAe,IAAnD,UACE,sBAAKS,WAAS,UAAUd,UAAU,cAAlC,UACE,qBAAIA,UAAU,UAAd,eACI,sBAAMA,UAAU,YAAhB,sBADJ,4BAGA,sBAAKA,UAAU,iBAAf,UACE,mEACA,uDAEF,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CAAcF,MAAM,qBAAqBC,MAAM,YAC/C,cAAC,EAAD,CAAcD,MAAM,wBAAwBC,MAAM,YAClD,cAAC,EAAD,CAAcD,MAAM,eAAeC,MAAM,mBAI3CM,GAAc,qBAAKL,UAAU,aAC/B,mCACE,oBAAGe,KAAK,+BAA+BC,OAAO,QAA9C,oBACS,sBAAMhB,UAAU,YAEzB,oBAAGe,KAAK,oCAAoCC,OAAO,QAAnD,sBACW,sBAAMhB,UAAU,YAE3B,8BACGK,EACC,sBACEY,QAAS,WACPX,GAAY,GAEZG,EAAS,mBAJb,SAOE,cAAC,IAAD,MAGF,sBACEQ,QAAS,WACPX,GAAY,GACZG,EAAS,kBAHb,SAME,cAAC,IAAD,eCvCCS,MAlBf,WASE,OARAC,qBAAU,WACRC,IAAIC,KAAK,CACPC,OAAQ,IACRC,SAAU,IACVC,OAAQ,mBAET,IAGD,qBAAKxB,UAAU,MAAf,SACE,cAAC,gBAAD,UACE,cAAC,EAAD,SCROyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dd628b1c.chunk.js","sourcesContent":["import \"./custom-button.css\";\n\nconst CustomButton = ({ label, color }) => {\n  return (\n    <button className=\"custom-button\" style={{ color }}>\n      {label}\n      <span className=\"line\" style={{ background: color }}></span>\n    </button>\n  );\n};\n\nexport default CustomButton;\n","import React, { useState } from \"react\";\n\nimport \"../styles/main.css\";\nimport CustomButton from \"./custom-button/custom-button\";\n\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\n\nimport { useToasts } from \"react-toast-notifications\";\n\nconst Main = () => {\n  const [isDarkMode, setDarkMode] = useState(false);\n  const { addToast } = useToasts();\n\n  const taostMsg = (msg) => {\n    addToast(msg, {\n      appearance: \"success\",\n      autoDismiss: true,\n      autoDismissTimeout: 2000,\n    });\n  };\n\n  return (\n    <div className={`main${isDarkMode ? \" dark-mode\" : \"\"}`}>\n      <div data-aos=\"zoom-in\" className=\"information\">\n        <h1 className=\"tagline\">\n          A <span className=\"fc-yellow\">21 years</span> old Software Engineer\n        </h1>\n        <div className=\"email-n-number\">\n          <span>prakharshrivastava971@gmail.com</span>\n          <span>(+91) 7440580412</span>\n        </div>\n        <div className=\"options\">\n          <CustomButton label=\"Download my resume\" color=\"#e0a858\" />\n          <CustomButton label=\"Have an advise for me\" color=\"#419d78\" />\n          <CustomButton label=\"Get in touch\" color=\"#d9594c\" />\n        </div>\n      </div>\n\n      {!isDarkMode && <div className=\"my-image\"></div>}\n      <footer>\n        <a href=\"https://github.com/prakhar7s\" target=\"blank\">\n          Github <span className=\"line\"></span>\n        </a>\n        <a href=\"https://linkedin.com/in/prakhar7s\" target=\"blank\">\n          LinkedIn <span className=\"line\"></span>\n        </a>\n        <div>\n          {isDarkMode ? (\n            <span\n              onClick={() => {\n                setDarkMode(false);\n\n                taostMsg(\"Light mode on!\");\n              }}\n            >\n              <WbSunnyIcon />\n            </span>\n          ) : (\n            <span\n              onClick={() => {\n                setDarkMode(true);\n                taostMsg(\"Dark mode on!\");\n              }}\n            >\n              <NightsStayIcon />\n            </span>\n          )}\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Main;\n","import Aos from \"aos\";\nimport { useEffect } from \"react\";\nimport \"./App.css\";\n\nimport { ToastProvider } from \"react-toast-notifications\";\n\nimport Main from \"./components/Main\";\n\nfunction App() {\n  useEffect(() => {\n    Aos.init({\n      offset: 200,\n      duration: 600,\n      easing: \"ease-in-sine\",\n    });\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <ToastProvider>\n        <Main />\n      </ToastProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"aos/dist/aos.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}